class Test {
    fn iter() {
        return (10..12).iter();
    }
}

fn multiple(t) {
    let mut output = 0;

    for 0..2 {
        for 0..3 {
            output += 25;
        }

        break;
    }

    for 0..1 {
        for 0..2 {
            for 0..3 {
            }
        }
    }

    t.assert(75, output);
}

fn range(t) {
    let mut result = 0;

    for 0..10 {
        for 0..20 {
            for 0..30 {
                result += 1;
            }
        }
    }

    t.assert(6000, result);
}

fn withoutCondition(t) {
    let mut i = 0;

    for {
        i += 1;

        if i == 5 {
            break;
        }
    }

    t.assert(5, i);
}

fn bindToItem(t) {
    for i in 0..10 {
        t.assert(i, i);
    }
}

fn customIterator(t) {
    let mut i = 0;

    for n in Test{} {
        t.assert(10 + i, n);

        i += 1;
    }

    t.assert(2, i);
}

pub fn loopsTests() {
    return [
        range,
        multiple,
        bindToItem,
        customIterator,
        withoutCondition
    ];
}